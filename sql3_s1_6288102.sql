-- Q1
SELECT CONCAT(EMP_FNAME," ",EMP_LNAME) AS Name, (2020 - YEAR(EMP_DOB)) AS Age
FROM professor
ORDER BY Age DESC
LIMIT 10;

-- Q2
SELECT ROUND(AVG(STU_GPA),2) AS "Average CIS GPA"
FROM student
WHERE DEPT_CODE = 'CIS';

-- Q3
SELECT COUNT(CRS_CREDIT) AS "# of Courses"
FROM course
WHERE CRS_CREDIT = 3 AND DEPT_CODE IN ('CIS','MATH','BIOL','ENG');

-- Q4
SELECT DEPT_CODE, COUNT(STU_NUM) AS "Total # of Students"
FROM student
GROUP BY DEPT_CODE
HAVING DEPT_CODE IN ('CIS','MATH','BIOL','ENG');

-- Q5
SELECT DEPT_CODE, ROUND(AVG(STU_GPA),2) AS "Average GPA"
FROM student
GROUP BY DEPT_CODE
ORDER BY AVG(STU_GPA) DESC;

-- Q6
SELECT DEPT_CODE, ROUND(AVG(STU_GPA),2) AS "Average GPA"
FROM student
GROUP BY DEPT_CODE
HAVING AVG(STU_GPA)>3.00 
ORDER BY AVG(STU_GPA) DESC;

-- Q7
SELECT DISTINCT STU_CLASS, COUNT(STU_NUM) AS "Total students", AVG(STU_GPA) AS "Average GPA"
FROM student
WHERE STU_GPA IS NOT NULL
GROUP BY STU_CLASS
ORDER BY STU_CLASS ASC;

-- Q8
SELECT STU_NUM, CONCAT(STU_FNAME," ",STU_LNAME) AS student, CONCAT(EMP_FNAME," ",EMP_LNAME) AS advisor
FROM student s 
INNER JOIN professor p ON s.EMP_NUM = p.EMP_NUM
WHERE EMP_FNAME LIKE 'A%' OR EMP_FNAME LIKE 'P%'
ORDER BY advisor ASC;

-- Q9
SELECT p.EMP_NUM,DEPT_CODE, CONCAT(EMP_FNAME," ",EMP_LNAME) AS professor, COUNT(CLASS_CODE) AS "Total classes"
FROM professor p
INNER JOIN class c ON p.EMP_NUM = c.EMP_NUM
GROUP BY p.EMP_NUM
HAVING DEPT_CODE = 'CIS' AND COUNT(CLASS_CODE)>= 3;

-- 10
SELECT DISTINCT STU_FNAME, STU_LNAME, c.CLASS_CODE, GRADE, COURSE_CODE
FROM student s
INNER JOIN enroll e ON s.STU_NUM = e.STU_NUM
INNER JOIN class c ON e.CLASS_CODE = c.CLASS_CODE
WHERE COURSE_CODE LIKE 'CIS%'
ORDER BY COURSE_CODE, GRADE ASC;